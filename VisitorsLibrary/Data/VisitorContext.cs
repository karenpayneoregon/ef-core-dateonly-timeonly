// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ConfigurationLibrary.Classes;
using Microsoft.EntityFrameworkCore;
using EntityCoreTimeDateUtilities.Classes;
using VisitorsLibrary.Data.Configurations;
using VisitorsLibrary.Models;
#nullable disable

namespace VisitorsLibrary.Data;

public partial class VisitorContext : DbContext
{
    public VisitorContext()
    {
    }

    public VisitorContext(DbContextOptions<VisitorContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Visitor> Visitor { get; set; }
    public virtual DbSet<VisitorLog> VisitorLog { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer(ConfigurationHelper.ConnectionString()).
                UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new VisitorConfiguration());
        modelBuilder.ApplyConfiguration(new VisitorLogConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    /// <summary>
    /// handles DateOnly and TimeOnly conversions
    /// </summary>
    /// <param name="builder"></param>
    protected override void ConfigureConventions(ModelConfigurationBuilder builder)
    {

        builder.Properties<DateOnly>()
            .HaveConversion<DateOnlyConverter>()
            .HaveColumnType("date");

        builder.Properties<TimeOnly>()
            .HaveConversion<TimeOnlyConverter>()
            .HaveColumnType("time");

        base.ConfigureConventions(builder);

    }
}